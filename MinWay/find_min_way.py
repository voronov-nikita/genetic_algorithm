# Задача по нахождению минимального маршрута
# Для решения данной задачи требуется базовая модель создания генетического алгоритма
# Для постороения индивидов используется библиотека deap
# Поиск минимального саршрута осуществляется через индексацию кортежей (или списков)
#

# pip install deap
from deap import base, algorithms, creator, tools

from random import *
import matplotlib.pyplot as plt
import numpy as np


# <------------------- создадим константы для общей работы ------------------->
inf = float('inf')
# здесь указывается все возможные пути
# количество элементов в каждом 1-м кортеже - количесвто точек
# количество элементов в кортеже кортежа - все возможные пути,
# если путя не существует, на его место встает бесконечное число
ls = (
    (),
    (),
    (),
    (),
    (),
    (),
)
# откуда начинается старт
starting_poin = 0
LEN_VARIOUS = len(ls)
# длина хромосомы
LEN_CHROMOSOME = len(ls)*len(ls[0])

COUNT_PERSON = 20  # количесвто индивидов в популяции
PROBABILITY_CROSSING = 0.9  # шанс скрещивания ( по идее можно взять и 1(100%))
PROBABILITY_MUTATION = 0.1  # шанс мутации

COUNT_GENERATION = 200  # количество поколений ( итераций)


# <------------------- Описание генетического алгоритма ------------------->

creator.create("MinFitness", )


